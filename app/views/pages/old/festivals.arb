# No FestivalContainers? Display static page
if FestivalContainer.where(:display => true).count == 0
  render "/pages/editable_content"

# Otherwise display FestivalContainers
else
  header :id => "headlines", :class => "headlines-teachers" do
    div :class => "before"
    div :class => "main" do
      div :class => "line1" do
        h1 :class => "title" do
          text_node editable page, :title
        end
      end
    end
  end

  ul :class => "festivalcontainers" do
    FestivalContainer.where(:display => true ).sort_by{ |fc| [fc.name] }.each do |fc|
      li :class => "row festivalcontainer" do
        div :class => "basic" do   
          div :class => "description open-close open-trigger overflown-base" do
            div :class => "may-overflow is-overflown open-toggle-height" do
              ul :class => "upcoming" do
                fc.festivals.no_draft.now_and_future.each do |f|
                  li a f.name, :href => festival_path(f)
                end
              end
              text_node fc.description.html_safe
              ul :class => "downloads" do
                fc.downloads.each do |download|        
                  li do
                    small a download.description, :href => download.attachment.url
                  end
                end
              end              
            end
            div :class => "if-overflown" do
              div t(:more) + " >", :class => "more"
              div t(:close), :class => "close-trigger"
            end
          end
        end

        div :class => "details" do
          div :class => "content" do
            h2 fc.name, :class => "title"

            if fc.images.length > 0 
              if fc.images.length > 1
                div :class=>"image-container image-grid" do
                  fc.images.each do |image|
                    img :src => image.attachment.url(:medium)
                  end
                end
              else
                div :class=>"image-container" do
                  img :src => fc.images.first.attachment.url(:medium_detail_column)
                end
              end
            end
          end
        end
      end
    end
  end


  # get festivals in the past
  past_festivals = Festival.no_draft.select { |f| f.events.length > 0 && f.end_date < Date.today }

  section :class => "archive-section" do
    h5 t(:past_festivals), :class => "archive-headline"
    ul :class => "archive-links" do
      past_festivals.each do |festival|
        li do
          a festival.name, :href => festival_path(festival)
        end
      end
    end
  end

end