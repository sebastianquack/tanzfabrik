cache_arbre(self, cache_key_for_page_headlines(page)) do      
  header :id => "headlines", :class => "headlines-kursplan" do
    div :class => "main" do
      div :class => "line1" do
        h1 :class => "title" do
          span editable page, :title
          a "✎", :href => edit_admin_page_path(page), :class => "admin-only classes" if admin_user_signed_in?
        end
      end
      if page.content
        div :class => "line2 open-close opened" do
          div :class => "open open-toggle-height" do
            div page.content.html_safe
            div t(:close), :class => "close-trigger"
          end
          div :class => "closed open-trigger" do
            div t :profitraining_more
          end
        end    
      end
      div :class => "line3" do
       ul do
          page.downloads.each do |download|        
            li do
              a download.description, :href => download.attachment.url
            end
          end
        end
      end      
    end
  end
end

#trainings = Event.of_types([4]).sort_by { |t| t.event_details.first.start_date }
#sorted_trainings = trainings.sort_by { |t| t.event_details.first.start_date }

cache_arbre(self, cache_key_for_profitraining) do

  trainings_details = EventDetail.includes([{:event => {:people => :events }}, :repeat_mode])
    .where("end_date >= ?", Date.today)
    .order("Date(start_date)")
    .all.select{ |d| !d.event.draft && d.valid? && d.event.type_id == 4 }

  details_by_week = trainings_details.group_by { |d| d.start_date.beginning_of_week }

  ul :class => "timetable" do
    details_by_week.each do |beginning_of_week, details|
      ul :class => "week" do
        li do
          div :class => "header" do
            time (l beginning_of_week, :format => :short) + '-' + (l beginning_of_week + 4.day, :format => :short), :class => "time-week"
          end
          ul do
            occurrences = details.collect_concat { |d| d.occurrences }
            5.times do |wday|
              oc = occurrences.select { |oc| oc.wday == wday+1 }.first
              li do 
                time (l (beginning_of_week+wday.days), :format => :long_day), :class => ( oc ? "day" : "day holiday")
                if oc
                  details.each do |detail|
                    training = detail.event
                    next if detail.start_date > beginning_of_week # skip some
                    div :class => "event" do
                      h4 :class => "title" + (training.people.second ? " one-line" : "") do 
                        a training.title, :href => event_path(training) if training.title
                      end
                      div :class => "teacher" do
                        a training.people.sort.first.name, :href => person_link(training.people.sort.first)
                      end
                      if training.people.second
                        div :class => "teacher" do
                          a training.people.sort.second.name, :href => person_link(training.people.sort.second)
                        end                    
                      end
                      div :class => "time" do
                        # assuming all occurrences within one week have same start time and duration
                        time (l detail.starttime, :format => :hours_minutes), :class => "course-time"
                        span "-"
                        time (l detail.endtime_clock, :format => :hours_minutes), :class => "course-time"
                      end
                      #div :class => "description" do
                      #  para training.description.html_safe if training.description
                      #end
                    end
                  end
                else 
                  div :class => "event empty-event" do
                    div t :holiday, :class => "holiday"
                  end
                end
              end    
            end
          end
        end
      end
    end
  end
end