
def load_performance_projects(year)

  if year
    start_date = Date.parse('01-01-' + year.to_s)
    end_date = start_date.end_of_year
    performance_projekte = Event.no_draft.joins(:type, :event_details).where('event_types.id = 5 AND event_details.start_date >= ? AND event_details.start_date <= ?', start_date, end_date).uniq.sort_by{ |e| e.start_date }
  else 
    performance_projekte = current_performance_projects()
  end

  return performance_projekte

end

def render_list_for(performance_projekte) 
  
  ul :class => "project_list" do
    performance_projekte.each do |project| 
      li do
        a :class => "project event-modal-link", :href => event_path(project) do 
          
          div :class => "time-duration" do
            span l project.event_details.first.starttime, :format => :day_month
            text_node " - "
            span l project.event_details.last.endtime, :format => :day_month_year
          end

          div project.people.map { |p| p.name }.join(', ').html_safe, :class => "teacher"
          div project.title, :class => "title"
          
        end
      end
    end  
  end
  
end

div :class => "module__performance_projekte" do
  h3 params[:year] ? params[:year] : Date.today.year
  performance_projekte = load_performance_projects(params[:year])
  render_list_for(performance_projekte)

  # figure out in which years event_details exist
  years = Event.no_draft.joins(:type, :event_details).where('event_types.id = 5').group_by_year(:start_date).count

  # show links for these years
  section :class => "archive-section" do
    h3 t(:past_events), :class => "archive-headline"
    ul :class => "archive-links" do
      years.keys.reverse.each do |y|
        #details :class => "drawer" do
          #summary y.year
          li do
            a :href => (url_for :controller => 'pages', :action => 'show', :id => 'performance_projekte', :year => y.year.to_s) do
              h4 y.year, :class => "year"
            end
          end
        #end
      end
    end
  end
end