if content_module.parameter.nil?
  return
end

# load the festival
begin
  $festival = Festival.find(content_module.parameter.to_i)
rescue ActiveRecord::RecordNotFound
  return
end

if !$festival
  return
end

subHeadline = l($festival.start_date, :format => ( :default ) ) + "-" + l($festival.end_date) if $festival.events.exists?

cm1 = ContentModule.new(
  headline: $festival.name,
  sub: subHeadline,
  images: $festival.images,
  section: $festival.section
)

render :partial => "content_modules/page_intro_magazine", :locals => {
  :content_module => cm1
}

cm2 = ContentModule.new(
  style_option: :large_left,
  section: $festival.section
)
# override active text accessor method, use $ so festival is in global scope
def cm2.rich_content_1
  return $festival.rich_content
end

render :partial => "content_modules/content_element_magazine", :locals => {
  :content_module => cm2
}

cm3 = ContentModule.new(
  downloads: $festival.downloads
)
render :partial => "content_modules/content_element", :locals => {
  :content_module => cm3
}