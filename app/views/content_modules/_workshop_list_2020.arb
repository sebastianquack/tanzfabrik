
# local variable workshops - needs event details of workshops to display

  ul :class => "project_list" do
    workshops.each do |event_detail| 
      li do
        a :class => "project", :href => event_path(event_detail.event) do 
          if event_detail.occurrences.length > 1
            time :class => "date" do
              span l event_detail.starttime, :format => :day_month
              text_node " â€“ "
              span l event_detail.endtime, :format => :day_month_year
            end
          else 
            time :class => "date" do
              span l event_detail.starttime, :format => :day_month
            end
            time :class => "time" do
              span l event_detail.starttime, :format => :hours_minutes
              text_node " - "
              span l event_detail.starttime + event_detail.duration * 60, :format => :hours_minutes
            end
          end
          
          div event_detail.event.people.map { |p| p.name }.join(', ').html_safe, :class => "teacher"
          div event_detail.event.title, :class => "title"

          # hide festival reference in festival program
          unless defined? in_festival 
            span :class => "festival" do
              render :partial => "events/in_festival", :locals => {:event => event_detail.event, :link => false }
            end
          end
          
        end
      end
    end  
  end


































#if params[:year]
#  start_date = Date.parse('01-01-' + params[:year])
#  end_date = start_date.end_of_year
#  workshops = Event.joins(:type, :event_details).where('event_types.id = 2 AND event_details.start_date >= ? AND event_details.start_date <= ?', start_date, end_date).uniq
#else 
  #start_date = Date.today.beginning_of_month
#  start_date = Date.parse('01-01-' + Time.now.year.to_s) # get workshops from beginning of year
#  end_date = Time.now.to_s # don't show workshops that ended before today
#  workshops = Event.joins(:type, :event_details).where('event_types.id = 2 AND event_details.start_date >= ? AND event_details.end_date >= ?', start_date, end_date).uniq
#end

# get all workshops
#all_workshops = Event.where(:type_id => 2)

#div :class => "module__workshop_programm" do #

#  render :partial => "/events/workshop_list", :locals => {:in_festival => nil}  #

#  # figure out in which years event_details exist
#  years = Event.no_draft.joins(:type, :event_details).where('event_types.id = 2').where("start_date < '"+(Date.today.year+1).to_s+"-01-01'" ).group_by_year(:start_date).count#

#  # show links for these years
#  section :class => "archive-section" do
#    h5 t(:past_workshops), :class => "archive-headline"
#    ul :class => "archive-links" do
#      years.keys.each do |y|
#        if y.year <= Time.now.year
#          li do
#            a y.year.to_s, :href => (url_for :controller => 'pages', :action => 'show', :id => 'workshop_programm', :year => y.year.to_s)
#          end
#        end
#      end
#    end
#  end#

#end